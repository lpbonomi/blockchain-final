{
	"compiler": {
		"version": "0.8.13+commit.abaa5c0e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"name": "beforeEach",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "checkAddParticipant",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "checkAddProposal",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "checkBuyFractionalTokens",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "checkBuyTokensUnregistered",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "checkBuyTooLittleTokens",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "checkCancelProposal",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "checkCloseVoting",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "checkGetProposalInfo",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "checkGetProposals",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "checkOpenVoting",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "completeTest",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"checkAddParticipant()": {
					"notice": "#sender: account-1 #value: 10000"
				},
				"checkAddProposal()": {
					"notice": "#sender: account-1 #value: 10000"
				},
				"checkBuyFractionalTokens()": {
					"notice": "#sender: account-1 #value: 3001"
				},
				"checkBuyTooLittleTokens()": {
					"notice": "#sender: account-1 #value: 10000"
				},
				"checkCloseVoting()": {
					"notice": "#sender: account-1 #value: 100000"
				},
				"checkGetProposalInfo()": {
					"notice": "#sender: account-1 #value: 10000"
				},
				"checkGetProposals()": {
					"notice": "#sender: account-1 #value: 10000"
				},
				"checkOpenVoting()": {
					"notice": "#sender: account-1 #value: 10000"
				},
				"completeTest()": {
					"notice": "#sender: account-1 #value: 1000000"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"blockchain-final/tests/final_test.sol": "testSuite"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"blockchain-final/final.sol": {
			"keccak256": "0xbe7ac98c78ed53d045c0d89fe542de781129f965f80ed980cc3d7b9212f62969",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://be37f9851ac7061d02b8473da714a1845aab013ba3a57db11217d5aa5d175724",
				"dweb:/ipfs/QmWfVNWJfPvJDHpRjmMgYGMvZsLesLhCeyoFjnv5XXdK3g"
			]
		},
		"blockchain-final/openzeppelin-contracts-master/contracts/token/ERC20/ERC20.sol": {
			"keccak256": "0x17b6b6189de509d602776fab3d0924c576ec365e53e712d16bdc57b1538edadb",
			"license": "MIT",
			"urls": [
				"bzz-raw://7d8b3d9f1484e8ae7443a0a5e46f2faef362813f4fd6e0660d4b64725a16a990",
				"dweb:/ipfs/QmQVeGDmxWy5A4PfKKpNrrEjFTgwygS7xCTtySSMC7R4M8"
			]
		},
		"blockchain-final/openzeppelin-contracts-master/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x5736fdfd3c69664af01fbf8734410bb4133672fe0abfafa39574c02d63227c6c",
			"license": "MIT",
			"urls": [
				"bzz-raw://3d4c09d6c75c23a8e253ab3ab50c4243d21efc52acc808ae5b32d92c5032bba1",
				"dweb:/ipfs/Qmf8FAHdTm3oK9G8zdFm8yMSUQ13hSaENTFpxfM34dPwKA"
			]
		},
		"blockchain-final/openzeppelin-contracts-master/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
			"keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
			"license": "MIT",
			"urls": [
				"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
				"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
			]
		},
		"blockchain-final/openzeppelin-contracts-master/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"blockchain-final/openzeppelin-contracts-master/contracts/utils/math/SafeMath.sol": {
			"keccak256": "0x80a62a632fb210251e8a7632c66d8624fd1c2e60b75b3e08c8b04803abec336f",
			"license": "MIT",
			"urls": [
				"bzz-raw://0163070ead773cf28c76b7d88abb8ecf1c0a2cebda62cc44ca91f60faae361d6",
				"dweb:/ipfs/QmfVwE4pVia7L7LMbSkQRUWzmX6f4XpdagrrXh7or2qhyd"
			]
		},
		"blockchain-final/tests/final_test.sol": {
			"keccak256": "0x6f34d7d3c3050e0afd3825bb82dfacd6a9ff0c17db5c509c19004dfb341b6f30",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://e960f1f8e2e037234406f8ae2bec0765d9f7153bad54ebacf21c2d9b88ba4bcf",
				"dweb:/ipfs/QmSYXbrvZGCgt3kByRfnNLqYwC7rD4jGWiWLjJGmiHNKNW"
			]
		},
		"remix_accounts.sol": {
			"keccak256": "0x198a94b8e0342a81c31fda8ba387964155802ef81807e01e83e2320682dce327",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://db7d9939731e6fe2030d53b80f57ce2c1f8044209c1c67e634e81160227d3019",
				"dweb:/ipfs/QmRLYhZ2Y6bfh83QSD2hCnhVFejevzh77zUTohCCC8yCtu"
			]
		},
		"remix_tests.sol": {
			"keccak256": "0xe2783cdc204cba8c72494119339f1d90f9022b15d6c718c668b7f097d8e29787",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://bb6a22e64c7f16bcaab63b1c1a1b269d5be8a6d37bdd9dec1718477ab916b18e",
				"dweb:/ipfs/QmdkW1tT5iadBvaHMCoskhDGZKnfdg8o1D9CcoQYtdJet7"
			]
		}
	},
	"version": 1
}